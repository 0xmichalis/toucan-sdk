"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OffsetHelperStorage__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "balances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "contractRegistryAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "eligibleTokenAddresses",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "overallOffsetAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "sushiRouterAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "tco2Balance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080604052606680546001600160a01b031990811673263fa1c180889b3a3f46330f32a4a23287e99fc91790915560678054909116731b02da8cb0d097eb8d57a175b88c7d8b4799750617905534801561005857600080fd5b506104a3806100686000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a61461014a57806379bbce8f146101545780638da5cb5b14610167578063c23f001f14610178578063f2fde38b146101a357600080fd5b80632b437d741461009857806346af6070146100cb5780635d25309d146100f657806370ca227c1461012a575b600080fd5b6100b86100a636600461035a565b60696020526000908152604090205481565b6040519081526020015b60405180910390f35b6066546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100c2565b6100de6101043660046103ad565b80516020818301810180516065825292820191909301209152546001600160a01b031681565b6100b861013836600461035a565b606a6020526000908152604090205481565b6101526101b6565b005b6067546100de906001600160a01b031681565b6033546001600160a01b03166100de565b6100b861018636600461037b565b606860209081526000928352604080842090915290825290205481565b6101526101b136600461035a565b610221565b6033546001600160a01b031633146102155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61021f60006102ec565b565b6033546001600160a01b0316331461027b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020c565b6001600160a01b0381166102e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020c565b6102e9816102ec565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461035557600080fd5b919050565b60006020828403121561036b578081fd5b6103748261033e565b9392505050565b6000806040838503121561038d578081fd5b6103968361033e565b91506103a46020840161033e565b90509250929050565b6000602082840312156103be578081fd5b813567ffffffffffffffff808211156103d5578283fd5b818401915084601f8301126103e8578283fd5b8135818111156103fa576103fa610457565b604051601f8201601f19908116603f0116810190838211818310171561042257610422610457565b8160405282815287602084870101111561043a578586fd5b826020860160208301379182016020019490945295945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e24f4297c584f0baeefdb0f16dd966b7d7d68470d12f4c9956a27ac1675d4b8964736f6c63430008040033";
class OffsetHelperStorage__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OffsetHelperStorage__factory = OffsetHelperStorage__factory;
OffsetHelperStorage__factory.bytecode = _bytecode;
OffsetHelperStorage__factory.abi = _abi;
